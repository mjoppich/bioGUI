<!--<?xml version="1.0" encoding="UTF-8"?>-->
<template description="Install Template Module" title="Install Template Module">

<window width="500" height="900" title="Install Modules">

  <vgroup>

  <group>
	<label>Select the Programm to install:</label>
  <filelist id="prog" ext="*.igui"/>
  <label>You can download more install modules via 'Download Templates' in the lower left area.</label>
  </group>


  <group title="Install Options">
  <label>Install Program to WSL?</label>
    <checkbox id="WSLsel" value="true" selectonwindows="true">Use WSL? (Check on Windows, otherwise not)</checkbox>
    <label>The following options let you decide where to install the program to. If unsure, use the recommended setting.</label>
    
    <groupbox id="user_sel_instpath" title="Install Location" exclusive="true">

        <checkbox id="loc_datadir" value="data" selected="true">Install programs in User Data Dir (default; recommended)</checkbox>
        <checkbox id="loc_spec" value="spec"> <input id="loc_spec_user">/usr/local/</input></checkbox>

    </groupbox>

    <label>The Linux User/sudo password allows the install templates to install required dependencies.
    All bioGUI install modules are manually curated to reduce the chance of malicious software.</label>
    <label>Linux User Password / sudo Password</label>
    <input id="sudopw" type="password"></input>

  <label>If other programs should be able to find this program, check the box. It is recommended to have it checked.</label>
	<checkbox id="addtopath" value="1" value-unselected="0" selected="true">Add program folder to PATH in &#126;/.bashrc? (default/recommended: yes)</checkbox>
  </group>

  <label>You will have to enter a name for the template here. bioGUI searches in the template directory below the bioGUI executable.</label>
  <label>It is recommended to simply enter a name, e.g. "blast_test". bioGUI will place the template into a location it can access.</label>
  <group id="templpath_sel" checkable="true" title="Store template?" selected="true">
       <filedialog id="templpath" output="true" filter="*.gui" location="${APPDIR}/templates/">Save Template to</filedialog>
  </group>

	<action id="runprog" hint="Click here to install program into install location">Install Program</action>  
  
    <streambox id="output1">
      <stream id="outputstream1">Normal Log</stream>
      <stream id="outputstream2">Error Log</stream>
      <stream id="savetemplate" active="false">Template</stream>
    </streambox>

  </vgroup>

</window>

<execution>

<if id="prog_wsl" comp="is_set" value1="WSLsel" value2="true">
<relocate from="${prog}" wsl="true"/>
<else>
<value from="prog"/>
</else>
</if>

<env id="localip" get="IPv4"/>
<env id="loc_appdata" get="DATADIR" wsl="WSLsel"/>

<add id="loc_appdir" sep="/">
<env get="APPDIR" wsl="WSLsel"/>
<const>templates/</const>
</add>

<if id="user_instpath" comp="EQUALS" value1="user_sel_instpath" value2="data">
<value from="loc_appdata"/>
<else>
<value from="loc_spec_user"/>
</else>
</if>


<add id="cl" sep=" ">
    <value from="prog_wsl"/>
    <add sep="">
    <const>&quot;</const>
    <value from="user_instpath"/>
    <const>&quot;</const>
    </add>

    <add sep="">
    <const>&quot;</const>
    <value from="sudopw"/>
    <const>&quot;</const>
    </add>

    <value from="addtopath"/>

    <if id="templpath_sel_if" comp="EQUALS" value1="templpath_sel" value2="true" sep=" ">
        <value from="localip"/>
        <const>33333</const>
        <else>
            <const>""</const>
            <const>0</const>
        </else>
    </if>

    <value from="prog#add"/>
</add>

<add id="template_path" sep="">
<if id="script_else" comp="EQUALS" value1="templpath_sel" value2="true">
<script argv="${templpath},${loc_appdir}">
<![CDATA[
function evaluate(gvnPath, appdir)

        ext=".gui"
        
        if (gvnPath == "") then
        
        	for i = 1, 10 do
        		gvnPath = gvnPath .. string.char(math.random(97, 122))
        	end
          
        end

        if ( string.sub(gvnPath, math.min(string.len(gvnPath), string.len(appdir)))~=appdir) then
                gvnPath = appdir .. gvnPath
        end
        
        if ( string.sub(gvnPath,-string.len(ext))==ext ) then
                return(gvnPath)
        else
                return(gvnPath .. ".gui")
        end
end
]]>
</script>
</if>
</add>

<const>
</const>
<const id="d2ucheck">
<![CDATA[
if [ "$(uname)" != "Darwin" ]; then
  echo "Converting install module to UNIX file endings in $(pwd).";

  printf "echo 'converting' && sed -i 's/\r//' \\\$1 && echo 'converted' " > ./tounix
else
  echo "On Mac OS: no need to transform line-endings"
fi
]]>
</const>

<execute location="" exec="sh" param="-c '${d2ucheck}'" wsl="WSLsel">
	<output type="STD" id="stdout" color="red" to="outputstream1" />
	<output id="outcout2" type="CERR" color="red" to="outputstream2" />
</execute>
  
<execute location="" exec="sh" param="./tounix ${prog_wsl}" wsl="WSLsel">
	<output type="STD" id="stdout" color="red" to="outputstream1" />
	<output id="outcout2" type="CERR" color="red" to="outputstream2" />
</execute>

  <execute location="" exec="sh" wsl="WSLsel" param="${cl}">
    <output id="outcout" type="COUT" color="green" to="outputstream1" />
	<output id="outcout2" type="CERR" color="red" to="outputstream2" />
	<output type="TCP" host="" port="33333" color="blue" to="savetemplate" />
	<output deferred="true" type="FILE" from="${template_path}" to="savetemplate" />
  </execute>
   
</execution>
</template>
