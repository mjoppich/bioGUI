#! Install glimmer302b


echo "Dependencies: csh"
if [ ! "$2" = "" ]; then

    if [ "$(uname)" == "Darwin" ]; then

        echo "This tool will not compile if install directory path contains spaces!"

    else

        echo "Installing Dependencies (aptitude/Ubuntu)"

        echo "Installing dependencies"
        echo $2 | sudo -S apt-get update
        echo $2 | sudo -S apt-get -y install csh

    fi

else
   echo "No sudo password, not installing dependencies"
fi

## set all variables
PROG=glimmer302b
PROGDIR=$1

if [ -z "${PROGDIR}" ]; then
   PROGDIR=~/bioGUI/progs/
fi

PROGDIRESC=$(echo "$PROGDIR" | sed 's/ /\\ /g')

echo "PROGDIRESC $PROGDIRESC"

APPBINARYDIR="${PROGDIRESC}/${PROG}/"

if [ -d "$PROGDIR/$PROG" ]; then
    echo "Removing Folder $PROGDIR/$PROG"
    rm -rf "$PROGDIR/$PROG"
fi

## create progdir
mkdir -p "$PROGDIR/$PROG"

#download and unzip
wget http://ccb.jhu.edu/software/glimmer/$PROG.tar.gz -O "$PROGDIR/$PROG.tar.gz"

cd "$PROGDIR"
tar -xzf "$PROG.tar.gz" --strip 1 -C "$PROGDIR/$PROG"

#install prog
cd "$PROGDIR/$PROG/src"


# this fixes some issues on mac, not all
for script in **/Makefile; do

echo "Escaping $script"
sed -i.bak "s/cd \.\.\/\.\.\; pwd/cd \.\.\/\.\.\; pwd \| sed \'s\/ \/\\\\\\\\ \/g\'/g" $script

done

sed -i.bak "s/cd \.\.\; pwd/cd \.\.; pwd \| sed \'s\/ \/\\\\\\\\ \/g\'/g" Makefile

make

if [ $# -gt 2 ]; then

   if [ "$3" = "1" ]; then

      if ! grep -q "$PROGDIRESC/$PROG" ~/.bashrc; then
         echo "export PATH=\"$PROGDIRESC/$PROG:\$PATH\" " >> ~/.bashrc;
      fi
   fi

fi

APPBINARYESC="${PROGDIRESC}/${PROG}/"
APPBINARY="${PROGDIRESC}/${PROG}/scripts/g3-from-training.csh"
if [ -z "$(ls -A ${APPBINARYESC})" ] || [ ! -f ${APPBINARY} ]; then
   (>&2 echo ${APPBINARYESC})
   (>&2 ls ${APPBINARYESC})

   (>&2 echo " \n \n \n")

   (>&2 echo ${PROGDIRESC})
   (>&2 ls ${PROGDIRESC})

    (>&2 echo " \n \n \n")

   (>&2 echo ${APPBINARY})
   (>&2 ls ${APPBINARY})
   
   (>&2 echo " \n \n \n")

   (>&2 echo "ERROR: The application directory is empty after installation.")
   (>&2 echo "ERROR: If you experience problems please re-install the software and create an issue on https://github.com/mjoppich/bioGUI.")
   (>&2 echo "ERROR: For creating the issue, please upload the log.txt file of your installation attempt.")

    (>&2 echo " \n \n \n")

else

    echo "${PROG} has been installed into ${APPBINARYESC}"
    echo "Binary location ${APPBINARY}"

fi

if [ $# -eq 5 ]; then

# fix scripts

for script in $PROGDIRESC/$PROG/scripts/*.csh; do

sed -i "/set awkpath = /c\set awkpath = $PROGDIRESC/$PROG/scripts/" $script
sed -i "/set glimmerpath = /c\set glimmerpath = $PROGDIRESC/$PROG/bin/" $script

done


echo "sending template"

IP=$4
PORT=$5

NCCMD=""

if [ "$(uname)" == "Darwin" ]; then
	NCCMD="nc -c $IP $PORT"
else
	NCCMD="nc -q 0 $IP $PORT"
fi


$NCCMD <<EOF

<!--<?xml version="1.0" encoding="UTF-8")>-->
<template description="Glimmer3 scripts ($PROG)" title="Glimmer3">

<window width="500" height="1000" title="Glimmer3">
  <vgroup>

   <label>Run Program in WSL?</label>
   <checkbox id="WSLsel" value="true" selectonwindows="true">WSL</checkbox>

    <group title="Operation" exclusive="true">

<group id="fromscratch" title="From Scratch" checkable="true">
<label>Output Folder</label>
<filedialog id="scr_output_folder" output="true" folder="true" location="output">Select output folder</filedialog>
<label>Run Prefix</label>
<input id="scr_run_prefix">test1</input>
<filedialog id="scr_input_gen" location="">Input Genome</filedialog>
</group>

<group id="fromtraining" title="From Training" checkable="true">
<filedialog id="tra_output_folder" output="true" folder="true">Select output folder</filedialog>
<label>Run Prefix</label>
<input id="tra_run_prefix"/>
<filedialog id="tra_input_gen" type="">Input Genome</filedialog>
<filedialog id="tra_input_train" type="">Input Training</filedialog>
</group>

</group>



    <action id="runprog" hint="click here to run program">run program</action>

    <streambox id="output1">
      <stream id="outputstream1">OS1</stream>
      <stream id="outputstream2">OS2</stream>
    </streambox>


  </vgroup>
</window>

<execution>

<env id="ip" get="IPv4"/>
<const id="progdir">${APPBINARYDIR}</const>

<relocate id="scr_output_folder_rel" wsl="\${WSLsel}" from="\${scr_output_folder}"/>
<relocate id="scr_input_gen_rel" wsl="\${WSLsel}" from="\${scr_input_gen}"/>
<relocate id="tra_output_folder_rel" wsl="\${WSLsel}" from="\${tra_output_folder}"/>
<relocate id="tra_input_gen_rel" wsl="\${WSLsel}" from="\${tra_input_gen}"/>
<relocate id="tra_input_train_rel" wsl="\${WSLsel}" from="\${tra_input_train}"/>


<if comp="EQUALS" value1="fromscratch" value2="true">
<execute exec="sh" wsl="WSLsel" location="" param="-c &quot;cd \${scr_output_folder_rel}; csh \${progdir}/scripts/g3-from-scratch.csh \${scr_input_gen_rel} \${scr_run_prefix} &quot;">
    <output type="COUT" color="green" to="outputstream1" />
    <output type="CERR" color="red" to="outputstream2" />
</execute>
</if>

<if comp="EQUALS" value1="fromtraining" value2="true">
<execute exec="sh" wsl="WSLsel" location="" param="-c &quot;cd \${scr_output_folder_rel}; csh \${progdir}/scripts/g3-from-training.csh \${scr_input_gen_rel} \${tra_input_train_rel} \${tra_run_prefix} &quot;">
    <output type="STD" color="green" to="outputstream1" />
</execute>
</if>

</execution>
</template>

EOF


fi
