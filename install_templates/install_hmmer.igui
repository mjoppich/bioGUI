#! Install hmmer-3.1b2

## set all variables
PROG=hmmer-3.1b2

PROGDIR=$1

if [ -z "${PROGDIR}" ]; then
	PROGDIR=~/bioGUI/progs/
fi

PROGDIRESC=$(echo $PROGDIR | sed 's/ /\\ /g')

## create progdir
mkdir -p "$PROGDIR"

#download and unzip
if [ ! -f "$PROGDIR/$PROG.tar.gz" ]; then
	wget http://eddylab.org/software/hmmer3/3.1b2/hmmer-3.1b2.tar.gz -O "$PROGDIR/$PROG.tar.gz"
fi

if [ ! -d "$PROGDIR/$PROG" ]; then


cd "$PROGDIR"
tar -xzf $PROG.tar.gz -C "$PROGDIR/"

fi

#install prog
cd "$PROGDIR/$PROG"

./configure #-prefix="$PROGDIR/$PROG"
make
#make check
# does not really work on mac os
#make install

if [ $# -gt 2 ]; then

	if [ "$3" = "1" ]; then

		if ! grep -q "$PROGDIRESC/$PROG" ~/.bashrc; then
			echo "export PATH=\"$PROGDIRESC/$PROG:$PATH\" " >> ~/.bashrc;
		fi
	fi

fi

APPBINARYESC="${PROGDIRESC}/${PROG}/src/"
APPBINARY="${PROGDIRESC}/${PROG}/src/hmmbuild"
if [ -z "$(ls -A ${APPBINARYESC})" ] || [ ! -f ${APPBINARY} ]; then
   (>&2 echo ${APPBINARYESC})
   (>&2 ls ${APPBINARYESC})

   (>&2 echo " \n \n \n")

   (>&2 echo ${PROGDIRESC})
   (>&2 ls ${PROGDIRESC})

    (>&2 echo " \n \n \n")

   (>&2 echo ${APPBINARY})
   (>&2 ls ${APPBINARY})
   
   (>&2 echo " \n \n \n")

   (>&2 echo "ERROR: The application directory is empty after installation.")
   (>&2 echo "ERROR: If you experience problems please re-install the software and create an issue on https://github.com/mjoppich/bioGUI.")
   (>&2 echo "ERROR: For creating the issue, please upload the log.txt file of your installation attempt.")

    (>&2 echo " \n \n \n")

else

    echo "${PROG} has been installed into ${APPBINARYESC}"
    echo "Binary location ${APPBINARY}"

fi

if [ $# -eq 5 ]; then

IP=$4
PORT=$5

NCCMD=""

if [ "$(uname)" == "Darwin" ]; then
	NCCMD="nc -c $IP $PORT"
else
	NCCMD="nc -q 0 $IP $PORT"
fi


$NCCMD <<EOF
<template rootid="hmmerroot" description="HMMER ($PROG)" title="HMMER">

<window width="500" height="800" title="HMMER">
  <vgroup>
  
     <label>Run Program in WSL?</label>
   <checkbox id="WSLsel" value="true" selectonwindows="true">WSL</checkbox>
  
    <group title="Operation" exclusive="true">

      <group id="sel_build" title="hmmbuild" checkable="true">
	<grid cols="2">
	  <label>Multiple Alignment File</label><filedialog id="build_msa" location="" multiple="true">Input Files</filedialog>
	  <label>Model Output File</label><filedialog id="build_model" location="" output="true">Output</filedialog>
	</grid>
      </group>

      <group id="sel_search" title="hmmsearch" checkable="true">
	<grid cols="2">
	  <label>Model File</label><filedialog id="search_model" location="" multiple="true">Input Files</filedialog>
	  <label>Database File</label><filedialog id="search_db" location="" multiple="true">Input Files</filedialog>
	  <label>Output File</label><filedialog id="search_output" location="" output="true">Output</filedialog>
	</grid>
      </group>

      
    </group>
    <action id="runprog" hint="click here to run program">run program</action>  

   <streambox id="output1">
    <stream id="outputstream1">COUT</stream>
    <stream id="outputstream2">CERR</stream>
   </streambox>

  </vgroup>
</window>

<execution>

<relocate id="loc_build_msa" wsl="\${WSLsel}" from="\${build_msa}"/>
<relocate id="loc_build_model" wsl="\${WSLsel}" from="\${build_model}"/>
<relocate id="loc_search_model" wsl="\${WSLsel}" from="\${search_model}"/>
<relocate id="loc_search_db" wsl="\${WSLsel}" from="\${search_db}"/>
<relocate id="loc_search_output" wsl="\${WSLsel}" from="\${search_output}"/>

<const id="bindir">${PROGDIRESC}/${PROG}/src/</const>

<add id="cl_build" sep=" ">
<add sep="">
<value from="bindir"/>
<const>hmmbuild</const>
</add>
<value from="loc_build_model"/>
<value from="loc_build_msa"/>
</add>

<add id="cl_search" sep=" ">
<add sep="">
<value from="bindir"/>
<const>hmmbuild</const>
</add>
<value from="loc_search_model"/>
<value from="loc_search_db"/>
<const>&gt;</const>
<value from="loc_search_output"/>
</add>

<add id="cl">
<if comp="EQUALS" value1="sel_build" value2="TRUE"><value from="cl_build"/></if>
<if comp="EQUALS" value1="sel_search" value2="TRUE"><value from="cl_search"/></if>
</add>


<env id="ip" get="IPv4"/>

<execute location="" exec="sh" wsl="WSLsel" param="-c &quot; \${cl} 2>&amp;1 &quot;">
    <output type="COUT" color="green" to="outputstream1" />
    <output type="CERR" color="red" to="outputstream2" />
  </execute>
  
  
</execution>
</template>
EOF


fi