#! Install StringTie 1.3.0

if [ ! -z "$2" ]; then
	echo "Installing dependency: python"
	echo $2 | sudo -S apt-get update
	echo $2 | sudo apt-get -y install perl r-base python
	
	pip install numpy scipy pysam
fi

## set all variables
PROG=StringTie_1_3_0
PROGNICE=StringTie1.3.0
PROGDIR=$1

APPBINARYDIR=${PROGDIR}/${PROG}/

if [ -z "${PROGDIR}" ]; then
	PROGDIR=~/bioGUI/progs/
	rm -rf $PROGDIR
fi

## create progdir
mkdir -p $PROGDIR

#download and unzip
if [ ! -f $PROGDIR/$PROG.tar.gz ]; then
	wget http://ccb.jhu.edu/software/stringtie/dl/stringtie-1.3.0.tar.gz -O $PROGDIR/$PROG.tar.gz
fi


if [ ! -d "$PROGDIR/$PROG" ]; then
	tar xvfz $PROGDIR/$PROG.tar.gz -C $PROGDIR
	cd $PROGDIR
	mv stringtie-1.3.0 $PROG
fi

cd $PROGDIR/$PROG

make release

if [ $# -gt 3 ]; then

	if [ "$3" = "1" ]; then

		if ! grep -q $PROGDIR/$PROG ~/.bashrc; then
			echo "export PATH=\"$PROGDIR/$PROG:$PATH\" " >> ~/.bashrc;
		fi
	fi

fi

if [ $# -eq 5 ]; then

IP=$4
PORT=$5

cat << EOF | netcat $IP $PORT

<template description="StringTie Transcript Assembler" title="${PROGNICE}">
<window title="StringTie 1.3.0">
<vgroup>

  <group title="Alignment Information">
	<checkbox id="WSLsel" value="true" selectonwindows="true">run in WSL?</checkbox>
  </group>
    
  <group title="Input Options">
	<filedialog id="stringtie_input_reference">Reference Annotation (GTF)</filedialog>
	<filedialog id="stringtie_aligned_bam">Aligned Reads</filedialog>

  </group>
  
  <group title="General Flags">
	<checkbox id="stringtie_ballgown_output" value="-B">Process for Ballgown</checkbox>
	<checkbox id="stringtie_only_ref_transcripts" value="-e">Only estimate and output the assembled transcripts matching the reference transcript</checkbox>
  </group>
  
  <group title="Output">
	<filedialog id="stringtie_output_gtf">Assembled GTF File</filedialog>
	<label>Name Prefix for GTF Entries</label><input id="stringtie_prefix_entries"></input>
	<filedialog id="stringtie_ballgown_path" output="true" folder="true">Ballgown ctab path</filedialog>
  </group>
    
  <group title="Advanced">
	<label>Used Processors</label><input id="stringtie_num_procs" type="int">2</input>
	<label>Additional command-line flags</label><input id="stringtie_advanced_options"></input>
  </group>
  
  
  
    <action program="stringtie">Run Stringtie!</action>
  
    <streambox id="output1">
    <stream id="outputstream1">std out</stream>
    <stream id="outputstream2">err out</stream>
   </streambox>

</vgroup>
</window>

<execution>
<const id="bindir">${APPBINARYDIR}</const>

<relocate id="stringtie_input_reference_rel" wsl="\${WSLsel}" from="\${stringtie_input_reference}"/>
<relocate id="stringtie_aligned_bam_rel" wsl="\${WSLsel}" from="\${stringtie_aligned_bam}"/>
<relocate id="stringtie_ballgown_path_rel" wsl="\${WSLsel}" from="\${stringtie_ballgown_path}"/>

<add id="cl" sep=" ">
<value from="stringtie_aligned_bam_rel"/>

<if value1="stringtie_input_reference_rel" comp="IS_SET" sep=" ">
	<const>-G</const>
	<value from="stringtie_input_reference_rel"/>
</if>

<if value1="stringtie_prefix_entries" comp="IS_SET" sep=" ">
	<const>-l</const>
	<value from="stringtie_prefix_entries"/>
</if>

<if value1="stringtie_ballgown_path_rel" comp="IS_SET" sep=" ">
	<const>-b</const>
	<value from="stringtie_ballgown_path_rel"/>
</if>

<const>-p</const>
<value from="stringtie_num_procs"/>

<value from="stringtie_ballgown_output"/>
<value from="stringtie_only_ref_transcripts"/>

<value from="stringtie_advanced_options"/>

</add>

  <execute program="stringtie" param="\${cl}" location="\${bindir}/" exec="stringtie" wsl="WSLsel">
    <output type="COUT" color="green" to="outputstream1" />
    <output type="CERR" color="red" to="outputstream2" />
  </execute>
  
</execution>  
</template>


EOF

fi