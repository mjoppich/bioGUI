#! Install Bowtie2 2.2.9

if [ "$(uname)" == "Darwin" ]; then
	source ~/.bash_profile
else
  echo ""
fi

if [ ! "$2" = "" ]; then

    if [ "$(uname)" == "Darwin" ]; then

        echo "Installing brew wget gcc@8 tbb"
        brew install wget gcc@8 tbb


    else

      echo "Installing dependencies"
      echo $2 | sudo -S apt-get update
      echo $2 | sudo -S apt-get -y install libtbb-dev
		
    fi

else
   echo "No sudo password, not installing dependencies"
fi

## set all variables
PROG=bowtie2_2_3_4_3
PROGNICE=Bowtie2-2.3.4.3
PROGDIR=$1

PROGDIRESC=$(echo $PROGDIR | sed 's/ /\\ /g')
APPBINARYDIR=${PROGDIR}/${PROG}/

if [ -z "${PROGDIR}" ]; then
	PROGDIR=~/bioGUI/progs/
fi

## create progdir
mkdir -p "$PROGDIR"


if [ -d "$PROGDIR/$PROG" ]; then
    echo "Removing Folder $PROGDIR/$PROG"
    rm -rf "$PROGDIR/$PROG"
fi

#download and unzip
wget https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.3.4.3/bowtie2-2.3.4.3-source.zip/download -O "$PROGDIR/$PROG.zip"

unzip -d "$PROGDIR/$PROG" "$PROGDIR/$PROG.zip"
mv "$PROGDIR/$PROG/"*/* "$PROGDIR/$PROG"

cd "$PROGDIR/$PROG"

if [ "$(uname)" == "Darwin" ]; then
	make CC=gcc-8 CPP=g++-8
else
	make
fi

if [ $# -gt 2 ]; then

	if [ "$3" = "1" ]; then

		if ! grep -q "$PROGDIRESC/$PROG" ~/.bashrc; then
			echo "export PATH=\"$PROGDIRESC/$PROG:\$PATH\" " >> ~/.bashrc;
		fi
	fi

fi


APPBINARYESC="${PROGDIRESC}/${PROG}/"
APPBINARY="${PROGDIRESC}/${PROG}/bowtie2-align-s"
if [ -z "$(ls -A ${APPBINARYESC})" ] || [ ! -f ${APPBINARY} ]; then
   (>&2 echo ${APPBINARYESC})
   (>&2 ls ${APPBINARYESC})

   (>&2 echo " \n \n \n")

   (>&2 echo ${PROGDIRESC})
   (>&2 ls ${PROGDIRESC})

    (>&2 echo " \n \n \n")

   (>&2 echo ${APPBINARY})
   (>&2 ls ${APPBINARY})
   
   (>&2 echo " \n \n \n")

   (>&2 echo "ERROR: The application directory is empty after installation.")
   (>&2 echo "ERROR: If you experience problems please re-install the software and create an issue on https://github.com/mjoppich/bioGUI.")
   (>&2 echo "ERROR: For creating the issue, please upload the log.txt file of your installation attempt.")

    (>&2 echo " \n \n \n")

else

    echo "${PROG} has been installed into ${APPBINARYESC}"
    echo "Binary location ${APPBINARY}"

fi

if [ $# -eq 5 ]; then

IP=$4
PORT=$5

NCCMD=""

if [ "$(uname)" == "Darwin" ]; then
	NCCMD="nc -c $IP $PORT"
else
	NCCMD="nc -q 0 $IP $PORT"
fi


$NCCMD <<EOF

<template description="bowtie2 2.0.4 aligner" title="bowtie2 2.0.4">
<window title="bowtie2 2.0.4 aligner">
<vgroup>

  <group title="Alignment Information">
	<checkbox id="WSLsel" value="true" selectonwindows="true">run in WSL?</checkbox>
	<label>bowtie2 Index</label> <filedialog id="bowtie2_index" output="false" folder="false">Select bowtie2 index</filedialog>
	<label>output file</label> <filedialog id="bowtie2_output" output="true" folder="false">Select output file</filedialog>
  </group>
  
   <group title="Input Data" exclusive="true">
    <hgroup>
     <group id="pairedend" selected="false" title="Paired End" checkable="true">
      <filedialog id="bowtie2_paired_m1" location="1" multiple="true">Mate 1 files</filedialog>
      <filedialog id="bowtie2_paired_m2" location="2" multiple="true">Mate 2 files</filedialog>
     </group>
     <group id="singleend" selected="true" title="Unpaired reads" checkable="true">
      <filedialog id="bowtie2_unpaired_reads" location="">Input File 1</filedialog>
     </group>
    </hgroup>
   </group>
  
  <group title="Input Options">
	<checkbox id="bowtie2_input_f">Reads are FASTA files</checkbox>
    <checkbox id="bowtie2_input_r">Reads are files with one input sequence per line</checkbox>
	<checkbox id="bowtie2_input_trim5">Trim bases from 5p</checkbox><input id="bowtie2_input_trim5_bases" type="int"></input>
	<checkbox id="bowtie2_input_trim3">Trim bases from 3p</checkbox><input id="bowtie2_input_trim3_bases" type="int"></input>
	
	<checkbox id="bowtie2_input_phred33">Qualities are phred+33</checkbox>
	<checkbox id="bowtie2_input_phred64">Qualities are phred+64</checkbox>

	<checkbox id="bowtie2_input_max_reports">Search at most x distinct, primary alignments for each read</checkbox><input id="bowtie2_input_max_reports_num" type="int"></input>


  </group>
  
  <group title="Alignment Options">
	  <checkbox id="bowtie2_align_nofw">Do not attempt to align unpaired reads to the forward reference strand</checkbox>
	  <checkbox id="bowtie2_align_norc">Do not attempt to align unpaired reads to the reverse reference strand</checkbox>
	  
	  <checkbox id="bowtie2_align_no-softclip">Disable soft-clipping</checkbox>
	  <checkbox id="bowtie2_align_no-spliced">Disable spliced alignment</checkbox>
	  <checkbox id="bowtie2_align_no-mixed">Disable mixed alignments (if no conc/disc)</checkbox>
	  <checkbox id="bowtie2_align_no-discordant">Do not look for discordant alignments if no concordant are available</checkbox>
	  
	  <combobox id="bowtie2_align_mate_orientations">
	  <comboitem value="--fr">forward/reverse</comboitem>
	  <comboitem value="--rf">reverse/forward</comboitem>
	  <comboitem value="--ff">forward/forward</comboitem>
	  </combobox>
	  
  </group>
  
  <group title="Output Options">
  <checkbox id="bowtie2_align_no-unaligned">Disable output of unaligned reads</checkbox>
  <checkbox id="bowtie2_align_reorder">Guarantees output to be in order of input</checkbox>
  </group>
  
  <group title="Performance Options">
  <label>Number of threads</label><input id="bowtie2_perf_threads" type="int">1</input>
  <checkbox id="bowtie2_perf_reorder">Maintain order of reads</checkbox>
  
  </group>
    
  <group title="Advanced">
	<label>Additional command-line flags</label><input id="bowtie2_adv_specific_options"></input>
  </group>
  
  
  
    <action program="bowtie2">Align!</action>

	<group title="build index">
		<label>Input Reference</label> <filedialog id="bowtie2_build_inref" output="false" folder="false">Select bowtie2 index</filedialog>		
		<label>bowtie2 Index</label> <filedialog id="bowtie2_build_idx_out" output="true" folder="false">Select bowtie2 index</filedialog>
		<action program="bowtie2index">Build Index</action>
	</group>
  
    <streambox id="output1">
    <stream id="outputstream1">std out</stream>
    <stream id="outputstream2">err out</stream>
   </streambox>

</vgroup>
</window>

<execution>
<const id="bindir">${PROGDIR}/${PROG}/</const>

<relocate id="bowtie2_build_inref_rel" wsl="\${WSLsel}" from="\${bowtie2_build_inref}"/>
<relocate id="bowtie2_build_idx_out_rel" wsl="\${WSLsel}" from="\${bowtie2_build_idx_out}"/>

<add id="cl_idx" sep=" ">
<value from="bowtie2_build_inref_rel"/>
<value from="bowtie2_build_idx_out_rel"/>
</add>

  <execute program="bowtie2index" param="\${cl_idx}" location="\${bindir}/" exec="bowtie2-build" wsl="WSLsel">
    <output type="COUT" color="green" to="outputstream1" />
    <output type="CERR" color="red" to="outputstream2" />
  </execute>

<if id="bowtie2_index_rel_raw" comp="EQUALS" value1="WSLsel" value2="true">
<relocate from="\${bowtie2_index}" wsl="true"/>
<else>
<value from="bowtie2_index"/>
</else>
</if>

<script id="bowtie2_index_rel" argv="\${bowtie2_index_rel_raw}">
<![CDATA[

function evaluate(arg1)
	
	if (string.match(arg1, ".%d.bt2$")) then
		return(string.sub(arg1, 0, arg1:find(".%d.bt2$")-1))
	end

    return(arg1)
end


]]>
</script>

<relocate id="bowtie2_paired_m1_rel" wsl="\${WSLsel}" from="\${bowtie2_paired_m1}"/>
<relocate id="bowtie2_paired_m2_rel" wsl="\${WSLsel}" from="\${bowtie2_paired_m2}"/>
<relocate id="bowtie2_unpaired_reads_rel" wsl="\${WSLsel}" from="\${bowtie2_unpaired_reads}"/>
<relocate id="bowtie2_output_rel" wsl="\${WSLsel}" from="\${bowtie2_output}"/>

<if id="input_files" sep=" " comp="EQUALS" value1="pairedend" value2="true">
<const>-1</const>
<value from="bowtie2_paired_m1_rel"/>
<const>-2</const>
<value from="bowtie2_paired_m2_rel"/>

<else>

<const>-U</const>
<value from="bowtie2_unpaired_reads_rel"/>

</else>
</if>

<env id="ip" get="IPv4"/>

<const id="options"></const>

<add id="cl" sep=" ">
<value from="options"/>
<value from="bowtie2_adv_specific_options"/>

<const>-x</const>
<value from="bowtie2_index_rel"/>

<value from="input_files"/>
<const>-S</const>
<value from="bowtie2_output_rel"/>

<if comp="IS_SET" value1="bowtie2_input_f" >-f</if>
<if comp="IS_SET" value1="bowtie2_input_r" >-r</if>

<if comp="IS_SET" value1="bowtie2_input_trim5" ><value from="bowtie2_input_trim5_bases"/></if>
<if comp="IS_SET" value1="bowtie2_input_trim3" ><value from="bowtie2_input_trim3_bases"/></if>

<if comp="IS_SET" value1="bowtie2_input_phred33" >--phred33</if>
<if comp="IS_SET" value1="bowtie2_input_phred64" >--phred64</if>

<if comp="IS_SET" value1="bowtie2_align_nofw" >--nofw</if>
<if comp="IS_SET" value1="bowtie2_align_norc" >--norc</if>


<if comp="IS_SET" value1="bowtie2_input_max_reports" ><value from="bowtie2_input_max_reports_num"/></if>

<if comp="IS_SET" value1="bowtie2_align_no-softclip" >--no-softclip</if>
<if comp="IS_SET" value1="bowtie2_align_no-spliced" >--no-spliced</if>
<if comp="IS_SET" value1="bowtie2_align_no-mixed" >--no-mixed</if>
<if comp="IS_SET" value1="bowtie2_align_no-discordant" >--no-discordant</if>

<if sep=" " comp="IS_SET" value1="pairedend">
	<if comp="IS_SET" value1="bowtie2_align_no-discordant">--no-discordant</if>
	<value from="bowtie2_align_mate_orientations"/>
</if>

</add>
	
  <execute program="bowtie2" param="\${cl}" location="\${bindir}" exec="bowtie2" wsl="WSLsel">
    <output type="COUT" color="green" to="outputstream1" />
    <output type="CERR" color="red" to="outputstream2" />
  </execute>

</execution>

</template>


EOF

fi

