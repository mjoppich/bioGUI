#! Install albacore (pip wheel)
##<filedialog output="false" folder="false">Albacore wheel file</filedialog>

DEP_PACKAGES="python3 pip3"

echo "Dependencies: $DEP_PACKAGES"
if [ ! "$2" = "" ]; then
	echo "Installing dependencies"
	echo $2 | sudo -S apt-get update
	echo $2 | sudo -S apt-get -y $DEP_PACKAGES

else
	echo "No sudo password, not installing dependencies"
fi

if [ -e "${@: -1}" ]; then
    ALBACORE_WHEEL="${@: -1}"
    echo "Input file found: $ALBACORE_WHEEL"
else
    echo "Input file not found: $ALBACORE_WHEEL"
    echo "Aborting install."
    exit -1;
fi


pip3 install $ALBACORE_WHEEL  --user

PYTHON_BIN_DIR=`~/progs/anaconda3/bin/python3 -m site --user-base`
PYTHON_BIN_DIR="$PYTHON_BIN_DIR/bin"

if [ $# -gt 2 ]; then

	if [ "$3" = "1" ]; then

		if ! grep -q "$PYTHON_BIN_DIR" ~/.bashrc; then
			echo "export PATH=\"$PYTHON_BIN_DIR:\$PATH\" " >> ~/.bashrc;
		fi
	fi

fi

if [ $# -gt 4 ]; then

IP=$4
PORT=$5

nc $IP $PORT << EOF

<template description="albacore basecaller aligner" title="albacore (python)">
<window title="albacore basecaller">
<vgroup>
    <group title="Input Files">
        <grid cols="2">
            <label>Run in WSL on Windows?</label><checkbox id="WSLsel" value="true" selectonwindows="true">Run in WSL?</checkbox>
            <label>Input Reads/FAST5</label> <filedialog id="albacore_input" output="false" folder="false">Select input file</filedialog>
            <label>Go through folder recursively?</label><checkbox id="albacore_recursive">Yes</checkbox>
            <label>Output Folder</label> <filedialog id="albacore_output" output="true" folder="true">Select output folder</filedialog>
        </grid>
    </group>
    <group title="Program Options">
        <grid cols="2">
            <label>Number of Threads</label><input id="albacore_threads" type="int">4</input>
        </grid>
    </group>
    <group title="Kit Options" exclusive="true">
        <group title="Default kits" id="albacore_default_kit">
            <grid cols="2">
                <label>Select your flowcell</label>
                <combobox id="albacore_flowcell" selected="FLO-MIN106">
                    <comboitem value="FLO-MIN106">FLO-MIN106</comboitem>
                </combobox>
                <label>Select your kit</label>
                <combobox id="albacore_kit" selected="SQK-LSK208">
                    <comboitem value="SQK-LSK108">SQK-LSK108</comboitem>
                    <comboitem value="SQK-LSK208">SQK-LSK208</comboitem>
                    <comboitem value="SQK-LWB001">SQK-LWB001 (barcoding)</comboitem>
                    <comboitem value="SQK-LWP001">SQK-LWP001</comboitem>
                    <comboitem value="SQK-RAB201">SQK-RAB201 (barcoding)</comboitem>
                    <comboitem value="SQK-RAD002">SQK-RAD002</comboitem>
                    <comboitem value="SQK-RAS201">SQK-RAS201</comboitem>
                    <comboitem value="SQK-RBK001">SQK-RBK001 (barcoding)</comboitem>
                    <comboitem value="SQK-RLB001">SQK-RLB001 (barcoding)</comboitem>
                    <comboitem value="SQK-RLI001">SQK-RLI001</comboitem>
                    <comboitem value="SQK-RNA001">SQK-RNA001</comboitem>
                    <comboitem value="SQK-VBK001">SQK-VBK001</comboitem>
                </combobox>

            </grid>
        </group>
        <group title="Manual Kits">
            <grid cols="2">
                <label>Your flowcell:</label><input id="albacore_flowcell_man"></input>
                <label>Your kit:</label><input id="albacore_kit_man"></input>
            </grid>
        </group>
        <label>See list of available flowcell + kit combinations</label>
        <action program="albacore_list">Show List</action>
    </group>
    <group title="Overlap Mode">

        <group title="Command-line flags">
            <grid cols="2">
                <label>Additional command-line flags</label><input id="albacore_commandline_args"></input>
            </grid>
        </group>
    </group>

    <action program="albacore_basecall">Start Basecalling</action>

    <streambox id="output1">
        <stream id="outputstream1">std out</stream>
        <stream id="outputstream2">err out</stream>
    </streambox>
</vgroup>
</window>

<execution>
    <const id="bindir">${PYTHON_BIN_DIR}/</const>

    <relocate id="albacore_input_rel" from="\${albacore_input}" wsl="\${WSLsel}"/>
    <relocate id="albacore_output_rel" from="\${albacore_output}" wsl="\${WSLsel}"/>

    <if id="albacore_flowcell_select" comp="IS_SET" value1="\${albacore_default_kit}">
        <const>-f</const>
        <value from="\${albacore_flowcell}"/>
        <const>-k</const>
        <value from="\${albacore_flowcell}"/>
    <else>
        <const>-f</const>
        <value from="\${albacore_kit}"/>
        <const>-k</const>
        <value from="\${albacore_kit_man}"/>
    </else>
    </if>

    <add id="clargs" sep=" ">
        <value from="\${albacore_flowcell_select}"/>
        <if comp="IS_SET" value1="albacore_threads" sep=" "><const>-t</const><value from="\${albacore_threads}"/></if>
        <if comp="IS_SET" value1="albacore_recursive" sep=" "><const>-r</const></if>
        <value from="\${albacore_commandline_args}"/>

        <const>-i</const><value from="\${albacore_input_rel}"/>
        <const>-s</const><value from="\${albacore_output_rel}"/>

    </add>

    <execute program="albacore_list" param="-l" location="\${bindir}" exec="read_fast5_basecaller.py" wsl="WSLsel">
        <output type="COUT" color="green" to="outputstream1" />
        <output type="CERR" color="red" to="outputstream2" />
    </execute>


    <execute program="graphmap_owler" param="\${clargs_owler}" location="\${bindir}" exec="graphmap" wsl="WSLsel">
        <output type="COUT" color="green" to="outputstream1" />
        <output type="CERR" color="red" to="outputstream2" />
    </execute>

</execution>

</template>

EOF

fi
